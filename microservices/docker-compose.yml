version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - alarm-network

  # Message Queue
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - alarm-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "${API_GATEWAY_PORT}:8000"
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_SERVICE_URL=${DATABASE_SERVICE_URL}
      - ALARM_SCHEDULER_URL=${ALARM_SCHEDULER_URL}
    depends_on:
      - redis
      - postgres
    networks:
      - alarm-network

  # Alarm Scheduler Service
  alarm-scheduler:
    build:
      context: .
      dockerfile: alarm-scheduler/Dockerfile
    ports:
      - "${ALARM_SCHEDULER_PORT}:8002"
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
      - MAX_DB_CONNECTIONS=${MAX_DB_CONNECTIONS}
      - MIN_DB_CONNECTIONS=${MIN_DB_CONNECTIONS}
      - TIMEZONE=${TIMEZONE}
    depends_on:
      - redis
      - postgres
    networks:
      - alarm-network

  # Alarm Processor Service
  alarm-processor:
    build:
      context: .
      dockerfile: alarm-processor/Dockerfile
    ports:
      - "${ALARM_PROCESSOR_PORT}:8003"
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
      - DESCRIPTION_API_URL=${DESCRIPTION_API_URL}
      - TIMEZONE=${TIMEZONE}
    depends_on:
      - redis
      - postgres
    networks:
      - alarm-network

  # Email Service
  email-service:
    build:
      context: .
      dockerfile: email-service/Dockerfile
    ports:
      - "${EMAIL_SERVICE_PORT}:8004"
    environment:
      - REDIS_URL=${REDIS_URL}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SIMULATION_MODE=${SIMULATION_MODE}
    depends_on:
      - redis
    networks:
      - alarm-network

  # Database Service
  database-service:
    build:
      context: .
      dockerfile: database-service/Dockerfile
    ports:
      - "${DATABASE_SERVICE_PORT}:8001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - TIMEZONE=${TIMEZONE}
    depends_on:
      - postgres
    networks:
      - alarm-network

  # Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-gateway
    networks:
      - alarm-network

volumes:
  postgres_data:
  redis_data:

networks:
  alarm-network:
    driver: bridge 